{"ast":null,"code":"var _jsxFileName = \"/mnt/devplex/Nightland/nightland/src/App.js\",\n  _s = $RefreshSig$();\n// nightland/src/App.js\nimport React, { useReducer, useState } from 'react';\nimport { initialState, reducer } from './modules/gameState';\nimport SplashScreen from './components/SplashScreen';\nimport PrincessScreen from './components/PrincessScreen';\nimport GameContainer from './components/GameContainer';\nimport StatusBar from './components/StatusBar';\nimport SettingsMenu from './components/SettingsMenu';\nimport GameDialog from './components/GameDialog';\nimport InfoBox from './components/InfoBox';\nimport CombatUI from './components/CombatUI'; // Updated import\nimport { updateCombatDialogs } from './modules/utils';\nimport './public/styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [phase, setPhase] = useState('splash');\n  const [showSettings, setShowSettings] = useState(false);\n  const [dialogMessage, setDialogMessage] = useState('');\n  const [infoObject, setInfoObject] = useState(null);\n  const handleStartGame = () => setPhase('princess');\n  const handlePrincessNext = () => {\n    setPhase('gameplay');\n    renderMap();\n    document.getElementById('game-container').scrollTop = document.getElementById('game-container').scrollHeight;\n  };\n  const handleStartCombat = () => {\n    console.log('Start Combat Clicked - Active Monsters:', state.activeMonsters);\n    const attackers = state.activeMonsters.slice(0, state.maxAttackers).map((monster, i) => ({\n      monster,\n      position: {\n        x: state.player.x + (i % 2 ? 1 : -1),\n        y: state.player.y + (i < 2 ? -1 : 1)\n      }\n    }));\n    console.log('Attackers:', attackers);\n    const dialogData = updateCombatDialogs('I do not fear you evil!', attackers.map(() => 'grrrrr'), state.player, attackers.map(slot => slot.monster));\n    const action = {\n      type: 'SET_COMBAT',\n      payload: {\n        inCombat: true,\n        attackSlots: attackers,\n        turnOrder: [state.player, ...attackers.map(slot => slot.monster)],\n        combatTurn: state.player,\n        dialogData: dialogData\n      }\n    };\n    console.log('Dispatching Action:', action);\n    dispatch(action);\n  };\n  const handleTestDamage = () => dispatch({\n    type: 'UPDATE_PLAYER_HP',\n    payload: {\n      hp: state.player.hp - 10\n    }\n  });\n  const toggleSettings = e => {\n    e.stopPropagation();\n    setShowSettings(!showSettings);\n  };\n  const showDialog = message => {\n    setDialogMessage(message);\n    setTimeout(() => setDialogMessage(''), 3600);\n  };\n  const showInfoBox = obj => {\n    setInfoObject(obj);\n    if (obj) setTimeout(() => setInfoObject(null), 3600);\n  };\n  const renderMap = () => {\n    console.log('Rendering map - placeholder');\n    // Add sprite positioning logic here once clarified\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [phase === 'splash' && /*#__PURE__*/_jsxDEV(SplashScreen, {\n      onStart: handleStartGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 36\n    }, this), phase === 'princess' && /*#__PURE__*/_jsxDEV(PrincessScreen, {\n      onNext: handlePrincessNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 38\n    }, this), phase === 'gameplay' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GameContainer, {\n        state: state,\n        dispatch: dispatch,\n        onStartCombat: handleStartCombat,\n        onTestDamage: handleTestDamage,\n        showDialog: showDialog,\n        showInfoBox: showInfoBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StatusBar, {\n        hp: state.player.hp,\n        onSettingsToggle: toggleSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), showSettings && /*#__PURE__*/_jsxDEV(SettingsMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 38\n      }, this), state.inCombat && /*#__PURE__*/_jsxDEV(CombatUI, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(GameDialog, {\n      message: dialogMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n      object: infoObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"background-audio\",\n      loop: true,\n      autoPlay: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/assets/sounds/ambient-background.wav\",\n        type: \"audio/wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"g71NDEmrbgdURkcozUSG9HRYpxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useState","initialState","reducer","SplashScreen","PrincessScreen","GameContainer","StatusBar","SettingsMenu","GameDialog","InfoBox","CombatUI","updateCombatDialogs","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","state","dispatch","phase","setPhase","showSettings","setShowSettings","dialogMessage","setDialogMessage","infoObject","setInfoObject","handleStartGame","handlePrincessNext","renderMap","document","getElementById","scrollTop","scrollHeight","handleStartCombat","console","log","activeMonsters","attackers","slice","maxAttackers","map","monster","i","position","x","player","y","dialogData","slot","action","type","payload","inCombat","attackSlots","turnOrder","combatTurn","handleTestDamage","hp","toggleSettings","e","stopPropagation","showDialog","message","setTimeout","showInfoBox","obj","className","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onNext","onStartCombat","onTestDamage","onSettingsToggle","object","id","loop","autoPlay","src","_c","$RefreshReg$"],"sources":["/mnt/devplex/Nightland/nightland/src/App.js"],"sourcesContent":["// nightland/src/App.js\nimport React, { useReducer, useState } from 'react';\nimport { initialState, reducer } from './modules/gameState';\nimport SplashScreen from './components/SplashScreen';\nimport PrincessScreen from './components/PrincessScreen';\nimport GameContainer from './components/GameContainer';\nimport StatusBar from './components/StatusBar';\nimport SettingsMenu from './components/SettingsMenu';\nimport GameDialog from './components/GameDialog';\nimport InfoBox from './components/InfoBox';\nimport CombatUI from './components/CombatUI'; // Updated import\nimport { updateCombatDialogs } from './modules/utils';\nimport './public/styles.css';\n\nconst App = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [phase, setPhase] = useState('splash');\n    const [showSettings, setShowSettings] = useState(false);\n    const [dialogMessage, setDialogMessage] = useState('');\n    const [infoObject, setInfoObject] = useState(null);\n\n    const handleStartGame = () => setPhase('princess');\n    const handlePrincessNext = () => {\n        setPhase('gameplay');\n        renderMap();\n        document.getElementById('game-container').scrollTop = document.getElementById('game-container').scrollHeight;\n    };\n\n    const handleStartCombat = () => {\n        console.log('Start Combat Clicked - Active Monsters:', state.activeMonsters);\n        const attackers = state.activeMonsters.slice(0, state.maxAttackers).map((monster, i) => ({\n            monster,\n            position: { x: state.player.x + (i % 2 ? 1 : -1), y: state.player.y + (i < 2 ? -1 : 1) }\n        }));\n        console.log('Attackers:', attackers);\n        const dialogData = updateCombatDialogs(\n            'I do not fear you evil!',\n            attackers.map(() => 'grrrrr'),\n            state.player,\n            attackers.map(slot => slot.monster)\n        );\n        const action = {\n            type: 'SET_COMBAT',\n            payload: {\n                inCombat: true,\n                attackSlots: attackers,\n                turnOrder: [state.player, ...attackers.map(slot => slot.monster)],\n                combatTurn: state.player,\n                dialogData: dialogData\n            }\n        };\n        console.log('Dispatching Action:', action);\n        dispatch(action);\n    };\n\n    const handleTestDamage = () => dispatch({ type: 'UPDATE_PLAYER_HP', payload: { hp: state.player.hp - 10 } });\n    const toggleSettings = (e) => {\n        e.stopPropagation();\n        setShowSettings(!showSettings);\n    };\n\n    const showDialog = (message) => {\n        setDialogMessage(message);\n        setTimeout(() => setDialogMessage(''), 3600);\n    };\n\n    const showInfoBox = (obj) => {\n        setInfoObject(obj);\n        if (obj) setTimeout(() => setInfoObject(null), 3600);\n    };\n\n    const renderMap = () => {\n        console.log('Rendering map - placeholder');\n        // Add sprite positioning logic here once clarified\n    };\n\n    return (\n        <div className=\"app\">\n            {phase === 'splash' && <SplashScreen onStart={handleStartGame} />}\n            {phase === 'princess' && <PrincessScreen onNext={handlePrincessNext} />}\n            {phase === 'gameplay' && (\n                <>\n                    <GameContainer \n                        state={state} \n                        dispatch={dispatch} \n                        onStartCombat={handleStartCombat} \n                        onTestDamage={handleTestDamage}\n                        showDialog={showDialog} \n                        showInfoBox={showInfoBox} \n                    />\n                    <StatusBar hp={state.player.hp} onSettingsToggle={toggleSettings} />\n                    {showSettings && <SettingsMenu />}\n                    {state.inCombat && <CombatUI state={state} dispatch={dispatch} />}\n                </>\n            )}\n            <GameDialog message={dialogMessage} />\n            <InfoBox object={infoObject} />\n            <audio id=\"background-audio\" loop autoPlay>\n                <source src=\"/assets/sounds/ambient-background.wav\" type=\"audio/wav\" />\n            </audio>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}