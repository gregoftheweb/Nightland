{"ast":null,"code":"var _jsxFileName = \"/mnt/devplex/Nightland/nightland/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from 'react';\nimport { initializePositions } from './modules/movement';\nimport { setupEventListeners } from './modules/events';\nimport { initialState, reducer } from './modules/gameState';\n\n// Mock or placeholder functions (replace with actual implementations)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst showDialog = message => alert(message); // Example: shows a simple alert\nconst audio = {\n  play: () => Promise.resolve()\n}; // Mock audio object\nconst statusBar = document.querySelector('#status-bar') || null; // Example: assumes a status-bar element\nconst gameContainer = document.querySelector('#game-container') || null; // Example: assumes a game-container element\nconst renderMap = () => console.log('Rendering map'); // Mock function\nconst combatStep = () => console.log('Combat step'); // Mock function\nconst showPrincessScreen = statusBar => console.log('Showing princess screen', statusBar); // Mock function\nconst startGame = (statusBar, gameContainer, renderMap) => console.log('Starting game', statusBar, gameContainer, renderMap); // Mock function\nconst showInfoBox = (entity, infoBox) => console.log('Showing info for', entity); // Mock function\nconst toggleSettings = event => console.log('Toggling settings', event); // Mock function\nconst toggleSFX = () => console.log('Toggling SFX'); // Mock function\n\nfunction App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [phase, setPhase] = React.useState('start'); // Example phase management\n\n  useEffect(() => {\n    if (phase === 'gameplay') {\n      initializePositions(state);\n    }\n  }, [phase, state.player.position, state.redoubt.position]);\n  useEffect(() => {\n    // Setup event listeners when the component mounts\n    const movePlayer = key => handleMovePlayer(state, dispatch, key, showDialog);\n    setupEventListeners(audio, statusBar, gameContainer, renderMap, movePlayer, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, state);\n\n    // Cleanup (optional, if needed for other listeners)\n    return () => {\n      // Add cleanup if other listeners are added in the future\n    };\n  }, [state, dispatch, showDialog, audio, statusBar, gameContainer, renderMap, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, phase]);\n\n  // Render the game UI (example structure)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game-container\",\n    style: {\n      position: 'relative',\n      width: '2000px',\n      height: '2000px',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      style: {\n        position: 'absolute',\n        width: '2000px',\n        height: '2000px',\n        outline: '1px solid blue'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"player\",\n        style: {\n          position: 'absolute',\n          width: '40px',\n          height: '40px',\n          background: 'yellow',\n          outline: '1px solid yellow'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"redoubt\",\n        style: {\n          position: 'absolute',\n          width: '40px',\n          height: '40px',\n          background: 'green',\n          outline: '1px solid green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status-bar\",\n      style: {\n        position: 'absolute',\n        bottom: '0',\n        width: '100%',\n        height: '42px',\n        background: 'red',\n        outline: '1px solid red'\n      },\n      children: [\"HP: \", state.player.hp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), phase === 'start' && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"splash-button\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }, this), phase === 'princess' && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"princess-button\",\n      children: \"Begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kWYNDdZjjn282gIt8LHjfbXjA1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useReducer","initializePositions","setupEventListeners","initialState","reducer","jsxDEV","_jsxDEV","showDialog","message","alert","audio","play","Promise","resolve","statusBar","document","querySelector","gameContainer","renderMap","console","log","combatStep","showPrincessScreen","startGame","showInfoBox","entity","infoBox","toggleSettings","event","toggleSFX","App","_s","state","dispatch","phase","setPhase","useState","player","position","redoubt","movePlayer","key","handleMovePlayer","id","style","width","height","overflow","children","className","outline","background","fileName","_jsxFileName","lineNumber","columnNumber","bottom","hp","_c","$RefreshReg$"],"sources":["/mnt/devplex/Nightland/nightland/src/App.js"],"sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport { initializePositions } from './modules/movement';\nimport { setupEventListeners } from './modules/events';\nimport { initialState, reducer } from './modules/gameState';\n\n// Mock or placeholder functions (replace with actual implementations)\nconst showDialog = (message) => alert(message); // Example: shows a simple alert\nconst audio = { play: () => Promise.resolve() }; // Mock audio object\nconst statusBar = document.querySelector('#status-bar') || null; // Example: assumes a status-bar element\nconst gameContainer = document.querySelector('#game-container') || null; // Example: assumes a game-container element\nconst renderMap = () => console.log('Rendering map'); // Mock function\nconst combatStep = () => console.log('Combat step'); // Mock function\nconst showPrincessScreen = (statusBar) => console.log('Showing princess screen', statusBar); // Mock function\nconst startGame = (statusBar, gameContainer, renderMap) => console.log('Starting game', statusBar, gameContainer, renderMap); // Mock function\nconst showInfoBox = (entity, infoBox) => console.log('Showing info for', entity); // Mock function\nconst toggleSettings = (event) => console.log('Toggling settings', event); // Mock function\nconst toggleSFX = () => console.log('Toggling SFX'); // Mock function\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [phase, setPhase] = React.useState('start'); // Example phase management\n\n  useEffect(() => {\n    if (phase === 'gameplay') {\n      initializePositions(state);\n    }\n  }, [phase, state.player.position, state.redoubt.position]);\n\n  useEffect(() => {\n    // Setup event listeners when the component mounts\n    const movePlayer = (key) => handleMovePlayer(state, dispatch, key, showDialog);\n    setupEventListeners(\n      audio,\n      statusBar,\n      gameContainer,\n      renderMap,\n      movePlayer,\n      combatStep,\n      showPrincessScreen,\n      startGame,\n      showInfoBox,\n      toggleSettings,\n      toggleSFX,\n      state\n    );\n\n    // Cleanup (optional, if needed for other listeners)\n    return () => {\n      // Add cleanup if other listeners are added in the future\n    };\n  }, [state, dispatch, showDialog, audio, statusBar, gameContainer, renderMap, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, phase]);\n\n  // Render the game UI (example structure)\n  return (\n    <div id=\"game-container\" style={{ position: 'relative', width: '2000px', height: '2000px', overflow: 'hidden' }}>\n      <div className=\"game-board\" style={{ position: 'absolute', width: '2000px', height: '2000px', outline: '1px solid blue' }}>\n        {/* Player and redoubt elements should be rendered here */}\n        <div id=\"player\" style={{ position: 'absolute', width: '40px', height: '40px', background: 'yellow', outline: '1px solid yellow' }}></div>\n        <div id=\"redoubt\" style={{ position: 'absolute', width: '40px', height: '40px', background: 'green', outline: '1px solid green' }}></div>\n      </div>\n      <div id=\"status-bar\" style={{ position: 'absolute', bottom: '0', width: '100%', height: '42px', background: 'red', outline: '1px solid red' }}>\n        HP: {state.player.hp}\n      </div>\n      {/* Add splash screen, princess screen, etc., based on phase */}\n      {phase === 'start' && <button id=\"splash-button\">Start Game</button>}\n      {phase === 'princess' && <button id=\"princess-button\">Begin</button>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}