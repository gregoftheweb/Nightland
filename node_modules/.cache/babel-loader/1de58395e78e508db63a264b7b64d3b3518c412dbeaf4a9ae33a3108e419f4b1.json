{"ast":null,"code":"// nightland/src/modules/events.js\nexport function setupEventListeners(audio, statusBar, gameContainer, renderMap, movePlayer, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, state, infoBox) {\n  console.log('events.js: Setting up event listeners');\n  console.log('events.js: StatusBar:', statusBar, 'GameContainer:', gameContainer, 'InfoBox:', infoBox);\n  document.addEventListener('DOMContentLoaded', () => {\n    console.log('events.js: DOMContentLoaded fired');\n    const splashButton = document.getElementById('splash-button');\n    console.log('events.js: splashButton found:', !!splashButton, 'Element:', splashButton);\n    if (splashButton) {\n      splashButton.addEventListener('click', () => {\n        console.log('events.js: Splash button clicked, state.audioStarted:', state.audioStarted);\n        if (!state.audioStarted) {\n          audio.play().then(() => {\n            console.log('events.js: Audio started');\n            state.audioStarted = true;\n          }).catch(err => console.error('events.js: Audio play error:', err));\n        }\n        showPrincessScreen(statusBar);\n      });\n    }\n    const princessButton = document.getElementById('princess-button');\n    console.log('events.js: princessButton found:', !!princessButton, 'Element:', princessButton);\n    if (princessButton) {\n      princessButton.addEventListener('click', () => {\n        console.log('events.js: Princess button clicked');\n        startGame(statusBar, gameContainer, renderMap);\n      });\n    }\n    const playerElement = document.getElementById('player');\n    if (playerElement) {\n      playerElement.addEventListener('click', () => showInfoBox(state.player, infoBox));\n    }\n    const abhumanElement = document.getElementById('abhuman');\n    if (abhumanElement) {\n      abhumanElement.addEventListener('click', () => {\n        var _state$abhuman;\n        return ((_state$abhuman = state.abhuman) === null || _state$abhuman === void 0 ? void 0 : _state$abhuman.active) && showInfoBox(state.abhuman, infoBox);\n      });\n    }\n    const watcherElement = document.getElementById('watcher');\n    if (watcherElement) {\n      watcherElement.addEventListener('click', () => showInfoBox(state.watcherSe, infoBox));\n    }\n    const redoubtElement = document.getElementById('redoubt');\n    if (redoubtElement) {\n      redoubtElement.addEventListener('click', () => showInfoBox(state.redoubt, infoBox));\n    }\n    const gearIcon = document.getElementById('gear-icon');\n    if (gearIcon) {\n      gearIcon.addEventListener('click', event => {\n        toggleSettings(event);\n      });\n    }\n    const sfxToggle = document.getElementById('sfx-toggle');\n    if (sfxToggle) {\n      sfxToggle.addEventListener('change', () => {\n        toggleSFX();\n      });\n    }\n    document.addEventListener('keydown', event => {\n      console.log('events.js: Key pressed:', event.key);\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n        event.preventDefault();\n        movePlayer(event.key);\n      } else if (event.key === ' ') {\n        event.preventDefault();\n        if (state.inCombat) {\n          combatStep();\n        } else {\n          const combatPlayer = document.getElementById('combat-player');\n          if (combatPlayer) combatPlayer.style.display = 'none';\n          for (let i = 1; i <= 4; i++) {\n            const enemyDiv = document.getElementById(`combat-enemy${i}`);\n            if (enemyDiv) enemyDiv.style.display = 'none';\n          }\n        }\n      }\n    });\n  });\n}","map":{"version":3,"names":["setupEventListeners","audio","statusBar","gameContainer","renderMap","movePlayer","combatStep","showPrincessScreen","startGame","showInfoBox","toggleSettings","toggleSFX","state","infoBox","console","log","document","addEventListener","splashButton","getElementById","audioStarted","play","then","catch","err","error","princessButton","playerElement","player","abhumanElement","_state$abhuman","abhuman","active","watcherElement","watcherSe","redoubtElement","redoubt","gearIcon","event","sfxToggle","key","includes","preventDefault","inCombat","combatPlayer","style","display","i","enemyDiv"],"sources":["/mnt/devplex/Nightland/nightland/src/modules/events.js"],"sourcesContent":["// nightland/src/modules/events.js\nexport function setupEventListeners(audio, statusBar, gameContainer, renderMap, movePlayer, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, state, infoBox) {\n    console.log('events.js: Setting up event listeners');\n    console.log('events.js: StatusBar:', statusBar, 'GameContainer:', gameContainer, 'InfoBox:', infoBox);\n\n    document.addEventListener('DOMContentLoaded', () => {\n        console.log('events.js: DOMContentLoaded fired');\n        const splashButton = document.getElementById('splash-button');\n        console.log('events.js: splashButton found:', !!splashButton, 'Element:', splashButton);\n        if (splashButton) {\n            splashButton.addEventListener('click', () => {\n                console.log('events.js: Splash button clicked, state.audioStarted:', state.audioStarted);\n                if (!state.audioStarted) {\n                    audio.play().then(() => {\n                        console.log('events.js: Audio started');\n                        state.audioStarted = true;\n                    }).catch(err => console.error('events.js: Audio play error:', err));\n                }\n                showPrincessScreen(statusBar);\n            });\n        }\n\n        const princessButton = document.getElementById('princess-button');\n        console.log('events.js: princessButton found:', !!princessButton, 'Element:', princessButton);\n        if (princessButton) {\n            princessButton.addEventListener('click', () => {\n                console.log('events.js: Princess button clicked');\n                startGame(statusBar, gameContainer, renderMap);\n            });\n        }\n\n        const playerElement = document.getElementById('player');\n        if (playerElement) {\n            playerElement.addEventListener('click', () => showInfoBox(state.player, infoBox));\n        }\n\n        const abhumanElement = document.getElementById('abhuman');\n        if (abhumanElement) {\n            abhumanElement.addEventListener('click', () => state.abhuman?.active && showInfoBox(state.abhuman, infoBox));\n        }\n\n        const watcherElement = document.getElementById('watcher');\n        if (watcherElement) {\n            watcherElement.addEventListener('click', () => showInfoBox(state.watcherSe, infoBox));\n        }\n\n        const redoubtElement = document.getElementById('redoubt');\n        if (redoubtElement) {\n            redoubtElement.addEventListener('click', () => showInfoBox(state.redoubt, infoBox));\n        }\n\n        const gearIcon = document.getElementById('gear-icon');\n        if (gearIcon) {\n            gearIcon.addEventListener('click', (event) => {\n                toggleSettings(event);\n            });\n        }\n\n        const sfxToggle = document.getElementById('sfx-toggle');\n        if (sfxToggle) {\n            sfxToggle.addEventListener('change', () => {\n                toggleSFX();\n            });\n        }\n\n        document.addEventListener('keydown', (event) => {\n            console.log('events.js: Key pressed:', event.key);\n            if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n                event.preventDefault();\n                movePlayer(event.key);\n            } else if (event.key === ' ') {\n                event.preventDefault();\n                if (state.inCombat) {\n                    combatStep();\n                } else {\n                    const combatPlayer = document.getElementById('combat-player');\n                    if (combatPlayer) combatPlayer.style.display = 'none';\n                    for (let i = 1; i <= 4; i++) {\n                        const enemyDiv = document.getElementById(`combat-enemy${i}`);\n                        if (enemyDiv) enemyDiv.style.display = 'none';\n                    }\n                }\n            }\n        });\n    });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}