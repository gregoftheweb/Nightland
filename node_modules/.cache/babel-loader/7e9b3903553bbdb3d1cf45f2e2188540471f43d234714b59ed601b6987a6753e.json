{"ast":null,"code":"// nightland/src/modules/gameState.js\nconst initialState = {\n  player: {\n    x: 8,\n    y: 35,\n    hp: 100,\n    name: \"Christos\",\n    description: \"One of the humans from the Last Redoubt.\",\n    initiative: 10,\n    lastComment: \"\"\n  },\n  monsters: [{\n    x: 0,\n    y: 0,\n    hp: 20,\n    name: \"Abhuman\",\n    description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n    active: false,\n    type: \"regular\",\n    initiative: 5,\n    maxInstances: 4\n  }],\n  greatPowers: [{\n    x: 16,\n    y: 0,\n    width: 4,\n    height: 4,\n    name: \"The Watcher of the South East\",\n    description: \"One of the great powers and a source of great evil. It watches, silent, for Aeons.\",\n    type: \"greatPower\",\n    initiative: 8,\n    maxInstances: 1\n  }],\n  redoubt: {\n    name: \"The Last Redoubt\",\n    description: \"The last haven of mankind save one. It protects millions of souls from the horrors of the Nightland.\"\n  },\n  mapWidth: 20,\n  mapHeight: 40,\n  tileSize: 40,\n  viewHeight: 800,\n  map: Array(40).fill().map(() => Array(20).fill('.')),\n  audioStarted: false,\n  moveCount: 0,\n  spawnThreshold: Math.floor(Math.random() * 7) + 4,\n  inCombat: false,\n  combatTurn: null,\n  turnOrder: [],\n  maxAttackers: 4,\n  attackSlots: [],\n  waitingMonsters: [],\n  activeMonsters: [{\n    x: 8,\n    y: 35,\n    hp: 20,\n    name: \"Abhuman\",\n    description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n    active: true,\n    type: \"regular\",\n    initiative: 5,\n    maxInstances: 4,\n    lastComment: \"\"\n  }]\n};\nconst reducer = (state, action) => {\n  var _action$payload$playe;\n  switch (action.type) {\n    case 'UPDATE_PLAYER_POSITION':\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          x: action.payload.x,\n          y: action.payload.y\n        }\n      };\n    case 'UPDATE_PLAYER_HP':\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          hp: action.payload.hp\n        }\n      };\n    case 'SET_COMBAT':\n      return {\n        ...state,\n        inCombat: action.payload.inCombat,\n        attackSlots: action.payload.attackSlots || state.attackSlots,\n        turnOrder: action.payload.turnOrder || state.turnOrder,\n        combatTurn: action.payload.combatTurn || state.combatTurn,\n        player: {\n          ...state.player,\n          ...action.payload.player,\n          // Merge payload.player into state.player\n          lastComment: ((_action$payload$playe = action.payload.player) === null || _action$payload$playe === void 0 ? void 0 : _action$payload$playe.comment) || state.player.lastComment // Explicitly set lastComment\n        }\n      };\n    case 'ADD_ACTIVE_MONSTER':\n      return {\n        ...state,\n        activeMonsters: [...state.activeMonsters, action.payload.monster]\n      };\n    case 'UPDATE_WAITING_MONSTERS':\n      return {\n        ...state,\n        waitingMonsters: action.payload.waitingMonsters\n      };\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };","map":{"version":3,"names":["initialState","player","x","y","hp","name","description","initiative","lastComment","monsters","active","type","maxInstances","greatPowers","width","height","redoubt","mapWidth","mapHeight","tileSize","viewHeight","map","Array","fill","audioStarted","moveCount","spawnThreshold","Math","floor","random","inCombat","combatTurn","turnOrder","maxAttackers","attackSlots","waitingMonsters","activeMonsters","reducer","state","action","_action$payload$playe","payload","comment","monster"],"sources":["/mnt/devplex/Nightland/nightland/src/modules/gameState.js"],"sourcesContent":["// nightland/src/modules/gameState.js\nconst initialState = {\n    player: {\n        x: 8,\n        y: 35,\n        hp: 100,\n        name: \"Christos\",\n        description: \"One of the humans from the Last Redoubt.\",\n        initiative: 10,\n        lastComment: \"\"\n    },\n    monsters: [\n        {\n            x: 0,\n            y: 0,\n            hp: 20,\n            name: \"Abhuman\",\n            description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n            active: false,\n            type: \"regular\",\n            initiative: 5,\n            maxInstances: 4\n        }\n    ],\n    greatPowers: [\n        {\n            x: 16,\n            y: 0,\n            width: 4,\n            height: 4,\n            name: \"The Watcher of the South East\",\n            description: \"One of the great powers and a source of great evil. It watches, silent, for Aeons.\",\n            type: \"greatPower\",\n            initiative: 8,\n            maxInstances: 1\n        }\n    ],\n    redoubt: {\n        name: \"The Last Redoubt\",\n        description: \"The last haven of mankind save one. It protects millions of souls from the horrors of the Nightland.\"\n    },\n    mapWidth: 20,\n    mapHeight: 40,\n    tileSize: 40,\n    viewHeight: 800,\n    map: Array(40).fill().map(() => Array(20).fill('.')),\n    audioStarted: false,\n    moveCount: 0,\n    spawnThreshold: Math.floor(Math.random() * 7) + 4,\n    inCombat: false,\n    combatTurn: null,\n    turnOrder: [],\n    maxAttackers: 4,\n    attackSlots: [],\n    waitingMonsters: [],\n    activeMonsters: [\n        {\n            x: 8,\n            y: 35,\n            hp: 20,\n            name: \"Abhuman\",\n            description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n            active: true,\n            type: \"regular\",\n            initiative: 5,\n            maxInstances: 4,\n            lastComment: \"\"\n        }\n    ]\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_PLAYER_POSITION':\n            return {\n                ...state,\n                player: { ...state.player, x: action.payload.x, y: action.payload.y }\n            };\n        case 'UPDATE_PLAYER_HP':\n            return {\n                ...state,\n                player: { ...state.player, hp: action.payload.hp }\n            };\n        case 'SET_COMBAT':\n            return {\n                ...state,\n                inCombat: action.payload.inCombat,\n                attackSlots: action.payload.attackSlots || state.attackSlots,\n                turnOrder: action.payload.turnOrder || state.turnOrder,\n                combatTurn: action.payload.combatTurn || state.combatTurn,\n                player: {\n                    ...state.player,\n                    ...action.payload.player, // Merge payload.player into state.player\n                    lastComment: action.payload.player?.comment || state.player.lastComment // Explicitly set lastComment\n                }\n            };\n        case 'ADD_ACTIVE_MONSTER':\n            return {\n                ...state,\n                activeMonsters: [...state.activeMonsters, action.payload.monster]\n            };\n        case 'UPDATE_WAITING_MONSTERS':\n            return {\n                ...state,\n                waitingMonsters: action.payload.waitingMonsters\n            };\n        default:\n            return state;\n    }\n};\n\nexport { initialState, reducer };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}