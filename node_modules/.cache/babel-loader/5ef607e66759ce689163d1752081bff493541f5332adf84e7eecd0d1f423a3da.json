{"ast":null,"code":"// nightland/src/modules/gameState.js\nconst initialState = {\n  player: {\n    x: 8,\n    y: 35,\n    hp: 100,\n    name: \"Christos\",\n    description: \"One of the humans from the Last Redoubt.\",\n    initiative: 10,\n    lastComment: \"\" // Add this\n  },\n  // ... rest unchanged ...\n  activeMonsters: [{\n    x: 8,\n    y: 35,\n    hp: 20,\n    name: \"Abhuman\",\n    description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n    active: true,\n    type: \"regular\",\n    initiative: 5,\n    maxInstances: 4,\n    lastComment: \"\"\n  }]\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_PLAYER_POSITION':\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          x: action.payload.x,\n          y: action.payload.y\n        }\n      };\n    case 'UPDATE_PLAYER_HP':\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          hp: action.payload.hp\n        }\n      };\n    case 'SET_COMBAT':\n      return {\n        ...state,\n        inCombat: action.payload.inCombat,\n        attackSlots: action.payload.attackSlots || state.attackSlots,\n        turnOrder: action.payload.turnOrder || state.turnOrder,\n        combatTurn: action.payload.combatTurn || state.combatTurn\n      };\n    case 'ADD_ACTIVE_MONSTER':\n      return {\n        ...state,\n        activeMonsters: [...state.activeMonsters, action.payload.monster]\n      };\n    case 'UPDATE_WAITING_MONSTERS':\n      return {\n        ...state,\n        waitingMonsters: action.payload.waitingMonsters\n      };\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };","map":{"version":3,"names":["initialState","player","x","y","hp","name","description","initiative","lastComment","activeMonsters","active","type","maxInstances","reducer","state","action","payload","inCombat","attackSlots","turnOrder","combatTurn","monster","waitingMonsters"],"sources":["/mnt/devplex/Nightland/nightland/src/modules/gameState.js"],"sourcesContent":["// nightland/src/modules/gameState.js\nconst initialState = {\n    player: {\n        x: 8,\n        y: 35,\n        hp: 100,\n        name: \"Christos\",\n        description: \"One of the humans from the Last Redoubt.\",\n        initiative: 10,\n        lastComment: \"\" // Add this\n    },\n    // ... rest unchanged ...\n    activeMonsters: [\n        {\n            x: 8,\n            y: 35,\n            hp: 20,\n            name: \"Abhuman\",\n            description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n            active: true,\n            type: \"regular\",\n            initiative: 5,\n            maxInstances: 4,\n            lastComment: \"\"\n        }\n    ]\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_PLAYER_POSITION':\n            return {\n                ...state,\n                player: { ...state.player, x: action.payload.x, y: action.payload.y }\n            };\n        case 'UPDATE_PLAYER_HP':\n            return {\n                ...state,\n                player: { ...state.player, hp: action.payload.hp }\n            };\n        case 'SET_COMBAT':\n            return {\n                ...state,\n                inCombat: action.payload.inCombat,\n                attackSlots: action.payload.attackSlots || state.attackSlots,\n                turnOrder: action.payload.turnOrder || state.turnOrder,\n                combatTurn: action.payload.combatTurn || state.combatTurn\n            };\n        case 'ADD_ACTIVE_MONSTER':\n            return {\n                ...state,\n                activeMonsters: [...state.activeMonsters, action.payload.monster]\n            };\n        case 'UPDATE_WAITING_MONSTERS':\n            return {\n                ...state,\n                waitingMonsters: action.payload.waitingMonsters\n            };\n        default:\n            return state;\n    }\n};\n\nexport { initialState, reducer };"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EACjBC,MAAM,EAAE;IACJC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,EAAE;IACLC,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,0CAA0C;IACvDC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE,CAAC;EACpB,CAAC;EACD;EACAC,cAAc,EAAE,CACZ;IACIP,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,EAAE;IACLC,EAAE,EAAE,EAAE;IACNC,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,2GAA2G;IACxHI,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,SAAS;IACfJ,UAAU,EAAE,CAAC;IACbK,YAAY,EAAE,CAAC;IACfJ,WAAW,EAAE;EACjB,CAAC;AAET,CAAC;AAED,MAAMK,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM,CAACJ,IAAI;IACf,KAAK,wBAAwB;MACzB,OAAO;QACH,GAAGG,KAAK;QACRb,MAAM,EAAE;UAAE,GAAGa,KAAK,CAACb,MAAM;UAAEC,CAAC,EAAEa,MAAM,CAACC,OAAO,CAACd,CAAC;UAAEC,CAAC,EAAEY,MAAM,CAACC,OAAO,CAACb;QAAE;MACxE,CAAC;IACL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGW,KAAK;QACRb,MAAM,EAAE;UAAE,GAAGa,KAAK,CAACb,MAAM;UAAEG,EAAE,EAAEW,MAAM,CAACC,OAAO,CAACZ;QAAG;MACrD,CAAC;IACL,KAAK,YAAY;MACb,OAAO;QACH,GAAGU,KAAK;QACRG,QAAQ,EAAEF,MAAM,CAACC,OAAO,CAACC,QAAQ;QACjCC,WAAW,EAAEH,MAAM,CAACC,OAAO,CAACE,WAAW,IAAIJ,KAAK,CAACI,WAAW;QAC5DC,SAAS,EAAEJ,MAAM,CAACC,OAAO,CAACG,SAAS,IAAIL,KAAK,CAACK,SAAS;QACtDC,UAAU,EAAEL,MAAM,CAACC,OAAO,CAACI,UAAU,IAAIN,KAAK,CAACM;MACnD,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGN,KAAK;QACRL,cAAc,EAAE,CAAC,GAAGK,KAAK,CAACL,cAAc,EAAEM,MAAM,CAACC,OAAO,CAACK,OAAO;MACpE,CAAC;IACL,KAAK,yBAAyB;MAC1B,OAAO;QACH,GAAGP,KAAK;QACRQ,eAAe,EAAEP,MAAM,CAACC,OAAO,CAACM;MACpC,CAAC;IACL;MACI,OAAOR,KAAK;EACpB;AACJ,CAAC;AAED,SAASd,YAAY,EAAEa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}