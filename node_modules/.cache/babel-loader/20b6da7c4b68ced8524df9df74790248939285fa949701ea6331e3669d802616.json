{"ast":null,"code":"var _jsxFileName = \"/mnt/devplex/Nightland/nightland/src/App.js\",\n  _s = $RefreshSig$();\n// nightland/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [phase, setPhase] = useState('splash');\n  console.log('App Phase:', phase); // Basic logging\n\n  const handleStartGame = () => setPhase('gameplay');\n  useEffect(() => {\n    console.log('Phase changed to:', phase);\n    if (phase === 'gameplay') {\n      const testImage = document.querySelector('#test-image');\n      console.log('Test Image Element:', {\n        testImage,\n        styles: testImage === null || testImage === void 0 ? void 0 : testImage.style.cssText\n      });\n\n      // Test image loading with multiple paths\n      const testPaths = ['../../public/assets/images/player.png', '/assets/images/player.png', '../public/assets/images/player.png'];\n      testPaths.forEach(path => {\n        const img = new Image();\n        img.src = path;\n        img.onload = () => console.log(`Image loaded successfully from ${path}:`, img.src);\n        img.onerror = () => console.log(`Image failed to load from ${path}:`, img.src, 'Error:', img.error);\n      });\n    }\n  }, [phase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [phase === 'splash' && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"splash\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"splash-button\",\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), phase === 'gameplay' && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"test-image\",\n      style: {\n        position: 'fixed',\n        // Fixed to viewport\n        left: '0px',\n        // Top-left corner\n        top: '0px',\n        // Top-left corner\n        border: '5px solid red',\n        // Bright red border for debugging\n        background: `url('/assets/images/player.png') no-repeat center center / cover`,\n        // Try absolute path (default)\n        visibility: 'visible',\n        // Ensure visible\n        opacity: '1',\n        // Ensure full opacity\n        width: '40px',\n        // Ensure size\n        height: '40px' // Ensure size\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/player.png\",\n        alt: \"Player Debug\",\n        style: {\n          width: '40px',\n          height: '40px',\n          display: 'block'\n        },\n        onLoad: () => console.log('Inline <img> loaded successfully'),\n        onError: e => console.log('Inline <img> failed to load:', e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'white',\n          position: 'absolute',\n          top: '0',\n          left: '0'\n        },\n        children: \"Test Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"background-audio\",\n      loop: true,\n      autoPlay: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/assets/sounds/ambient-background.wav\",\n        type: \"audio/wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Y1v4j6WHWsnIdaqf34p7bIgFCdg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","phase","setPhase","console","log","handleStartGame","testImage","document","querySelector","styles","style","cssText","testPaths","forEach","path","img","Image","src","onload","onerror","error","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","position","left","top","border","background","visibility","opacity","width","height","alt","display","onLoad","onError","e","color","loop","autoPlay","type","_c","$RefreshReg$"],"sources":["/mnt/devplex/Nightland/nightland/src/App.js"],"sourcesContent":["// nightland/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './styles/styles.css';\n\nconst App = () => {\n    const [phase, setPhase] = useState('splash');\n\n    console.log('App Phase:', phase); // Basic logging\n\n    const handleStartGame = () => setPhase('gameplay');\n\n    useEffect(() => {\n        console.log('Phase changed to:', phase);\n        if (phase === 'gameplay') {\n            const testImage = document.querySelector('#test-image');\n            console.log('Test Image Element:', { testImage, styles: testImage?.style.cssText });\n\n            // Test image loading with multiple paths\n            const testPaths = [\n                '../../public/assets/images/player.png',\n                '/assets/images/player.png',\n                '../public/assets/images/player.png'\n            ];\n            testPaths.forEach(path => {\n                const img = new Image();\n                img.src = path;\n                img.onload = () => console.log(`Image loaded successfully from ${path}:`, img.src);\n                img.onerror = () => console.log(`Image failed to load from ${path}:`, img.src, 'Error:', img.error);\n            });\n        }\n    }, [phase]);\n\n    return (\n        <div className=\"app\">\n            {phase === 'splash' && (\n                <div id=\"splash\">\n                    <button id=\"splash-button\" onClick={handleStartGame}>\n                        Start Game\n                    </button>\n                </div>\n            )}\n            {phase === 'gameplay' && (\n                <div\n                    id=\"test-image\"\n                    style={{\n                        position: 'fixed', // Fixed to viewport\n                        left: '0px', // Top-left corner\n                        top: '0px', // Top-left corner\n                        border: '5px solid red', // Bright red border for debugging\n                        background: `url('/assets/images/player.png') no-repeat center center / cover`, // Try absolute path (default)\n                        visibility: 'visible', // Ensure visible\n                        opacity: '1', // Ensure full opacity\n                        width: '40px', // Ensure size\n                        height: '40px' // Ensure size\n                    }}\n                >\n                    {/* Fallback <img> for debugging */}\n                    <img\n                        src=\"/assets/images/player.png\"\n                        alt=\"Player Debug\"\n                        style={{ width: '40px', height: '40px', display: 'block' }}\n                        onLoad={() => console.log('Inline <img> loaded successfully')}\n                        onError={(e) => console.log('Inline <img> failed to load:', e)}\n                    />\n                    {/* Fallback text for debugging */}\n                    <span style={{ color: 'white', position: 'absolute', top: '0', left: '0' }}>Test Image</span>\n                </div>\n            )}\n            <audio id=\"background-audio\" loop autoPlay>\n                <source src=\"/assets/sounds/ambient-background.wav\" type=\"audio/wav\" />\n            </audio>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,QAAQ,CAAC;EAE5CQ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,CAAC,CAAC,CAAC;;EAElC,MAAMI,eAAe,GAAGA,CAAA,KAAMH,QAAQ,CAAC,UAAU,CAAC;EAElDN,SAAS,CAAC,MAAM;IACZO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,KAAK,CAAC;IACvC,IAAIA,KAAK,KAAK,UAAU,EAAE;MACtB,MAAMK,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;MACvDL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;QAAEE,SAAS;QAAEG,MAAM,EAAEH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,KAAK,CAACC;MAAQ,CAAC,CAAC;;MAEnF;MACA,MAAMC,SAAS,GAAG,CACd,uCAAuC,EACvC,2BAA2B,EAC3B,oCAAoC,CACvC;MACDA,SAAS,CAACC,OAAO,CAACC,IAAI,IAAI;QACtB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;QACvBD,GAAG,CAACE,GAAG,GAAGH,IAAI;QACdC,GAAG,CAACG,MAAM,GAAG,MAAMf,OAAO,CAACC,GAAG,CAAC,kCAAkCU,IAAI,GAAG,EAAEC,GAAG,CAACE,GAAG,CAAC;QAClFF,GAAG,CAACI,OAAO,GAAG,MAAMhB,OAAO,CAACC,GAAG,CAAC,6BAA6BU,IAAI,GAAG,EAAEC,GAAG,CAACE,GAAG,EAAE,QAAQ,EAAEF,GAAG,CAACK,KAAK,CAAC;MACvG,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC;EAEX,oBACIH,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,GACfrB,KAAK,KAAK,QAAQ,iBACfH,OAAA;MAAKyB,EAAE,EAAC,QAAQ;MAAAD,QAAA,eACZxB,OAAA;QAAQyB,EAAE,EAAC,eAAe;QAACC,OAAO,EAAEnB,eAAgB;QAAAiB,QAAA,EAAC;MAErD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,EACA3B,KAAK,KAAK,UAAU,iBACjBH,OAAA;MACIyB,EAAE,EAAC,YAAY;MACfb,KAAK,EAAE;QACHmB,QAAQ,EAAE,OAAO;QAAE;QACnBC,IAAI,EAAE,KAAK;QAAE;QACbC,GAAG,EAAE,KAAK;QAAE;QACZC,MAAM,EAAE,eAAe;QAAE;QACzBC,UAAU,EAAE,kEAAkE;QAAE;QAChFC,UAAU,EAAE,SAAS;QAAE;QACvBC,OAAO,EAAE,GAAG;QAAE;QACdC,KAAK,EAAE,MAAM;QAAE;QACfC,MAAM,EAAE,MAAM,CAAC;MACnB,CAAE;MAAAf,QAAA,gBAGFxB,OAAA;QACImB,GAAG,EAAC,2BAA2B;QAC/BqB,GAAG,EAAC,cAAc;QAClB5B,KAAK,EAAE;UAAE0B,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEE,OAAO,EAAE;QAAQ,CAAE;QAC3DC,MAAM,EAAEA,CAAA,KAAMrC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAE;QAC9DqC,OAAO,EAAGC,CAAC,IAAKvC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEsC,CAAC;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eAEF9B,OAAA;QAAMY,KAAK,EAAE;UAAEiC,KAAK,EAAE,OAAO;UAAEd,QAAQ,EAAE,UAAU;UAAEE,GAAG,EAAE,GAAG;UAAED,IAAI,EAAE;QAAI,CAAE;QAAAR,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CACR,eACD9B,OAAA;MAAOyB,EAAE,EAAC,kBAAkB;MAACqB,IAAI;MAACC,QAAQ;MAAAvB,QAAA,eACtCxB,OAAA;QAAQmB,GAAG,EAAC,uCAAuC;QAAC6B,IAAI,EAAC;MAAW;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAC5B,EAAA,CArEID,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAuET,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}