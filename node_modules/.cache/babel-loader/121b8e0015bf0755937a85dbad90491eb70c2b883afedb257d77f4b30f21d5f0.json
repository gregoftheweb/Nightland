{"ast":null,"code":"// nightland/src/modules/gameState.js\nconst initialState = {\n  player: {\n    x: 8,\n    y: 35,\n    hp: 100,\n    name: \"Christos\",\n    description: \"One of the humans from the Last Redoubt.\",\n    initiative: 10,\n    lastComment: \"\"\n  },\n  monsters: [{\n    x: 0,\n    y: 0,\n    hp: 20,\n    name: \"Abhuman\",\n    description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n    active: false,\n    type: \"regular\",\n    initiative: 5,\n    maxInstances: 4\n  }],\n  greatPowers: [{\n    x: 16,\n    y: 0,\n    width: 4,\n    height: 4,\n    name: \"The Watcher of the South East\",\n    description: \"One of the great powers and a source of great evil. It watches, silent, for Aeons.\",\n    type: \"greatPower\",\n    initiative: 8,\n    maxInstances: 1\n  }],\n  redoubt: {\n    name: \"The Last Redoubt\",\n    description: \"The last haven of mankind save one. It protects millions of souls from the horrors of the Nightland.\"\n  },\n  mapWidth: 20,\n  mapHeight: 40,\n  tileSize: 40,\n  viewHeight: 800,\n  map: Array(40).fill().map(() => Array(20).fill('.')),\n  audioStarted: false,\n  moveCount: 0,\n  spawnThreshold: Math.floor(Math.random() * 7) + 4,\n  inCombat: false,\n  combatTurn: null,\n  turnOrder: [],\n  maxAttackers: 4,\n  attackSlots: [],\n  waitingMonsters: [],\n  dialogData: {\n    player: {\n      name: 'Christos',\n      hp: 100,\n      comment: ''\n    },\n    enemies: []\n  },\n  activeMonsters: [{\n    x: 8,\n    y: 35,\n    hp: 20,\n    name: \"Abhuman\",\n    description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n    active: true,\n    type: \"regular\",\n    initiative: 5,\n    maxInstances: 4,\n    lastComment: \"\"\n  }]\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_PLAYER_POSITION':\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          x: action.payload.x,\n          y: action.payload.y\n        }\n      };\n    case 'UPDATE_PLAYER_HP':\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          hp: action.payload.hp\n        }\n      };\n    case 'SET_COMBAT':\n      console.log('Reducer SET_COMBAT - Payload Dialog Data:', action.payload.dialogData);\n      return {\n        ...state,\n        inCombat: action.payload.inCombat,\n        attackSlots: action.payload.attackSlots || state.attackSlots,\n        turnOrder: action.payload.turnOrder || state.turnOrder,\n        combatTurn: action.payload.combatTurn || state.combatTurn,\n        player: action.payload.player || state.player,\n        dialogData: action.payload.dialogData || state.dialogData\n      };\n    case 'ADD_ACTIVE_MONSTER':\n      return {\n        ...state,\n        activeMonsters: [...state.activeMonsters, action.payload.monster]\n      };\n    case 'UPDATE_WAITING_MONSTERS':\n      return {\n        ...state,\n        waitingMonsters: action.payload.waitingMonsters\n      };\n    default:\n      return state;\n  }\n};\nexport { initialState, reducer };","map":{"version":3,"names":["initialState","player","x","y","hp","name","description","initiative","lastComment","monsters","active","type","maxInstances","greatPowers","width","height","redoubt","mapWidth","mapHeight","tileSize","viewHeight","map","Array","fill","audioStarted","moveCount","spawnThreshold","Math","floor","random","inCombat","combatTurn","turnOrder","maxAttackers","attackSlots","waitingMonsters","dialogData","comment","enemies","activeMonsters","reducer","state","action","payload","console","log","monster"],"sources":["/mnt/devplex/Nightland/nightland/src/modules/gameState.js"],"sourcesContent":["// nightland/src/modules/gameState.js\nconst initialState = {\n    player: {\n        x: 8,\n        y: 35,\n        hp: 100,\n        name: \"Christos\",\n        description: \"One of the humans from the Last Redoubt.\",\n        initiative: 10,\n        lastComment: \"\"\n    },\n    monsters: [\n        {\n            x: 0,\n            y: 0,\n            hp: 20,\n            name: \"Abhuman\",\n            description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n            active: false,\n            type: \"regular\",\n            initiative: 5,\n            maxInstances: 4\n        }\n    ],\n    greatPowers: [\n        {\n            x: 16,\n            y: 0,\n            width: 4,\n            height: 4,\n            name: \"The Watcher of the South East\",\n            description: \"One of the great powers and a source of great evil. It watches, silent, for Aeons.\",\n            type: \"greatPower\",\n            initiative: 8,\n            maxInstances: 1\n        }\n    ],\n    redoubt: {\n        name: \"The Last Redoubt\",\n        description: \"The last haven of mankind save one. It protects millions of souls from the horrors of the Nightland.\"\n    },\n    mapWidth: 20,\n    mapHeight: 40,\n    tileSize: 40,\n    viewHeight: 800,\n    map: Array(40).fill().map(() => Array(20).fill('.')),\n    audioStarted: false,\n    moveCount: 0,\n    spawnThreshold: Math.floor(Math.random() * 7) + 4,\n    inCombat: false,\n    combatTurn: null,\n    turnOrder: [],\n    maxAttackers: 4,\n    attackSlots: [],\n    waitingMonsters: [],\n    dialogData: {\n        player: { name: 'Christos', hp: 100, comment: '' },\n        enemies: []\n    },\n    activeMonsters: [\n        {\n            x: 8,\n            y: 35,\n            hp: 20,\n            name: \"Abhuman\",\n            description: \"Created from corrupted human stock ages ago, their hatred of humans is bone deep and drives them to kill.\",\n            active: true,\n            type: \"regular\",\n            initiative: 5,\n            maxInstances: 4,\n            lastComment: \"\"\n        }\n    ]\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'UPDATE_PLAYER_POSITION':\n            return {\n                ...state,\n                player: { ...state.player, x: action.payload.x, y: action.payload.y }\n            };\n        case 'UPDATE_PLAYER_HP':\n            return {\n                ...state,\n                player: { ...state.player, hp: action.payload.hp }\n            };\n            case 'SET_COMBAT':\n                console.log('Reducer SET_COMBAT - Payload Dialog Data:', action.payload.dialogData);\n                return {\n                    ...state,\n                    inCombat: action.payload.inCombat,\n                    attackSlots: action.payload.attackSlots || state.attackSlots,\n                    turnOrder: action.payload.turnOrder || state.turnOrder,\n                    combatTurn: action.payload.combatTurn || state.combatTurn,\n                    player: action.payload.player || state.player,\n                    dialogData: action.payload.dialogData || state.dialogData\n                };\n        case 'ADD_ACTIVE_MONSTER':\nreturn {\n    ...state,\n    activeMonsters: [...state.activeMonsters, action.payload.monster]\n};\n        case 'UPDATE_WAITING_MONSTERS':\nreturn {\n    ...state,\n    waitingMonsters: action.payload.waitingMonsters\n};\n        default:\nreturn state;\n    }\n};\n\nexport { initialState, reducer };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}