{"ast":null,"code":"// nightland/src/modules/events.js\nexport function setupEventListeners(audio, statusBar, gameContainer, renderMap, movePlayer, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, state, infoBox) {\n  console.log('events.js: Setting up event listeners');\n  console.log('events.js: StatusBar:', statusBar, 'GameContainer:', gameContainer, 'InfoBox:', infoBox);\n\n  // Attach listeners directly (no DOMContentLoaded)\n  const playerElement = document.getElementById('player');\n  if (playerElement) {\n    playerElement.addEventListener('click', () => showInfoBox(state.player, infoBox));\n  }\n  const abhumanElement = document.getElementById('abhuman');\n  if (abhumanElement) {\n    abhumanElement.addEventListener('click', () => {\n      var _state$abhuman;\n      return ((_state$abhuman = state.abhuman) === null || _state$abhuman === void 0 ? void 0 : _state$abhuman.active) && showInfoBox(state.abhuman, infoBox);\n    });\n  }\n  const watcherElement = document.getElementById('watcher');\n  if (watcherElement) {\n    watcherElement.addEventListener('click', () => showInfoBox(state.watcherSe, infoBox));\n  }\n  const redoubtElement = document.getElementById('redoubt');\n  if (redoubtElement) {\n    redoubtElement.addEventListener('click', () => showInfoBox(state.redoubt, infoBox));\n  }\n  const gearIcon = document.getElementById('gear-icon');\n  if (gearIcon) {\n    gearIcon.addEventListener('click', event => {\n      toggleSettings(event);\n    });\n  }\n  const sfxToggle = document.getElementById('sfx-toggle');\n  if (sfxToggle) {\n    sfxToggle.addEventListener('change', () => {\n      toggleSFX();\n    });\n  }\n  const handleKeyDown = event => {\n    console.log('events.js: Key pressed:', event.key);\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n      event.preventDefault();\n      movePlayer(event.key);\n    } else if (event.key === ' ') {\n      event.preventDefault();\n      if (state.inCombat) {\n        combatStep();\n      } else {\n        const combatPlayer = document.getElementById('combat-player');\n        if (combatPlayer) combatPlayer.style.display = 'none';\n        for (let i = 1; i <= 4; i++) {\n          const enemyDiv = document.getElementById(`combat-enemy${i}`);\n          if (enemyDiv) enemyDiv.style.display = 'none';\n        }\n      }\n    }\n  };\n  document.addEventListener('keydown', handleKeyDown);\n\n  // Cleanup\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown);\n  };\n}","map":{"version":3,"names":["setupEventListeners","audio","statusBar","gameContainer","renderMap","movePlayer","combatStep","showPrincessScreen","startGame","showInfoBox","toggleSettings","toggleSFX","state","infoBox","console","log","playerElement","document","getElementById","addEventListener","player","abhumanElement","_state$abhuman","abhuman","active","watcherElement","watcherSe","redoubtElement","redoubt","gearIcon","event","sfxToggle","handleKeyDown","key","includes","preventDefault","inCombat","combatPlayer","style","display","i","enemyDiv","removeEventListener"],"sources":["/mnt/devplex/Nightland/nightland/src/modules/events.js"],"sourcesContent":["// nightland/src/modules/events.js\nexport function setupEventListeners(audio, statusBar, gameContainer, renderMap, movePlayer, combatStep, showPrincessScreen, startGame, showInfoBox, toggleSettings, toggleSFX, state, infoBox) {\n    console.log('events.js: Setting up event listeners');\n    console.log('events.js: StatusBar:', statusBar, 'GameContainer:', gameContainer, 'InfoBox:', infoBox);\n\n    // Attach listeners directly (no DOMContentLoaded)\n    const playerElement = document.getElementById('player');\n    if (playerElement) {\n        playerElement.addEventListener('click', () => showInfoBox(state.player, infoBox));\n    }\n\n    const abhumanElement = document.getElementById('abhuman');\n    if (abhumanElement) {\n        abhumanElement.addEventListener('click', () => state.abhuman?.active && showInfoBox(state.abhuman, infoBox));\n    }\n\n    const watcherElement = document.getElementById('watcher');\n    if (watcherElement) {\n        watcherElement.addEventListener('click', () => showInfoBox(state.watcherSe, infoBox));\n    }\n\n    const redoubtElement = document.getElementById('redoubt');\n    if (redoubtElement) {\n        redoubtElement.addEventListener('click', () => showInfoBox(state.redoubt, infoBox));\n    }\n\n    const gearIcon = document.getElementById('gear-icon');\n    if (gearIcon) {\n        gearIcon.addEventListener('click', (event) => {\n            toggleSettings(event);\n        });\n    }\n\n    const sfxToggle = document.getElementById('sfx-toggle');\n    if (sfxToggle) {\n        sfxToggle.addEventListener('change', () => {\n            toggleSFX();\n        });\n    }\n\n    const handleKeyDown = (event) => {\n        console.log('events.js: Key pressed:', event.key);\n        if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n            event.preventDefault();\n            movePlayer(event.key);\n        } else if (event.key === ' ') {\n            event.preventDefault();\n            if (state.inCombat) {\n                combatStep();\n            } else {\n                const combatPlayer = document.getElementById('combat-player');\n                if (combatPlayer) combatPlayer.style.display = 'none';\n                for (let i = 1; i <= 4; i++) {\n                    const enemyDiv = document.getElementById(`combat-enemy${i}`);\n                    if (enemyDiv) enemyDiv.style.display = 'none';\n                }\n            }\n        }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Cleanup\n    return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n    };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}